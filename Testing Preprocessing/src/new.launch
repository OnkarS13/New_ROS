<launch>
    <!-- Set default arguments for offline mode and training mode -->
    <arg name="offline" default="true"/>
    <arg name="training_mode" default="false"/>

    <!-- ROSBridge WebSocket for communication -->
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        <arg name="port" value="9090"/>
    </include>

    <!-- Lane 1 setup -->
    <arg name="lane_1" default="true"/>

    <rosparam command="load" file="$(find multilane_sorter)/yamls/parameters.yaml" />
    <rosparam command="load" file="$(find multilane_sorter)/yamls/decision.yaml" />

    <group if="$(arg lane_1)" ns="lane_1">
        <!-- Offline Mode: Image Folder Publisher for Lane 1 -->
        <node if="$(arg offline)" pkg="multilane_sorter" type="imageFolderPub.py" name="image_pub" output="screen">
        </node>

        <node pkg="multilane_sorter" type="preprocessing_node.py" name="preprocessing" output="screen">    
        </node>

        <!-- AI Node for Lane 1 -->
        <node pkg="multilane_sorter" type="aiNode_onion.py" name="segmentation_node" output="screen">
            <!-- <param name="~camera_id_1" value="camera_11"/>
            <param name="~camera_id_2" value="camera_12"/>
            <param name="~training_mode" value="$(arg training_mode)"/> -->
        </node>

        <!-- Decision Node for Lane 1 -->
        <node pkg="multilane_sorter" type="decisionNode.py" name="decision_inference" output="screen">    
        </node>

        <!-- Signaling Node for Lane 1 -->
        <node name="signaling_node" pkg="multilane_sorter" type="signals.py" output="screen">
            <param name="arduino_num" value="1"/>
        </node>
    </group>
</launch>